--- src/server-orig.c	2023-06-03 22:40:18.903639777 +0900
+++ src/server.c	2023-06-03 22:43:25.756642066 +0900
@@ -66,6 +66,12 @@
 #include <sys/mman.h>
 #endif
 
+// Memcached-Soren
+// Author: sjoon@kaist.ac.kr
+#include "../../../../src/soren-c.h"
+
+int sorenReplayFuncWrapper(uint8_t* arg_memaddr, size_t arg_memsz, int argc, void* argv);
+
 #if defined(HAVE_SYSCTL_KIPC_SOMAXCONN) || defined(HAVE_SYSCTL_KERN_SOMAXCONN)
 #include <sys/sysctl.h>
 #endif
@@ -3938,6 +3944,27 @@
         return C_OK;       
     }
 
+    // Memcached-Soren
+    // Author: sjoon@kaist.ac.kr
+    int timestamp_idx;
+    uint32_t hashval;
+    char* raw_str;
+    if (is_write_command) {
+
+        timestamp_idx = cwMarkTsBefore();
+        // switch ()
+        hashval = cwSorenHash(c->argv[1]->ptr, strlen(c->argv[1]->ptr));
+        
+        printf("Propose start: %s %s %s\n", c->argv[0]->ptr, c->argv[1]->ptr, c->argv[2]->ptr);
+        cwPropose(
+            (uint8_t*)c->querybuf,
+            sdslen(c->querybuf),
+            NULL, 0, hashval
+        );
+        printf("Propose end.\n");
+        cwMarkTsAfter(timestamp_idx);
+    }
+
     /* Exec the command */
     if (c->flags & CLIENT_MULTI &&
         c->cmd->proc != execCommand &&
@@ -4016,6 +4043,8 @@
 int prepareForShutdown(int flags) {
     if (isShutdownInitiated()) return C_ERR;
 
+    cwCleanSoren();
+
     /* When SHUTDOWN is called while the server is loading a dataset in
      * memory we need to make sure no attempt is performed to save
      * the dataset on shutdown (otherwise it could overwrite the current DB
@@ -6780,6 +6809,13 @@
     int j;
     char config_from_stdin = 0;
 
+    // Memcached-Soren
+    // Author: sjoon@kaist.ac.kr
+    const int MAX_TIMESTAMP_RECORDS = 10000000;
+    
+    cwInitSoren(sorenReplayFuncWrapper);
+    cwInitTs(MAX_TIMESTAMP_RECORDS);
+
 #ifdef REDIS_TEST
     if (argc >= 3 && !strcasecmp(argv[1], "test")) {
         int flags = 0;
@@ -7078,3 +7114,14 @@
 }
 
 /* The End */
+
+// Memcached-Soren
+// Author: sjoon@kaist.ac.kr
+int sorenReplayFuncWrapper(uint8_t* arg_memaddr, size_t arg_memsz, int argc, void* argv) {
+
+    // printf("Replayer wrapper called.\n");
+
+   
+
+    return 0;
+}
\ No newline at end of file
